# Generated by Django 5.0.1 on 2024-02-03 15:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SalesData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateTimeField()),
                ('sales', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('userrole', models.CharField(blank=True, max_length=15)),
                ('added_by', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_id', models.CharField(max_length=50, null=True, unique=True)),
                ('category', models.CharField(max_length=50, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('userid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'category_info',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('product_id', models.CharField(max_length=50, null=True, unique=True)),
                ('product_name', models.CharField(max_length=50, null=True)),
                ('product_description', models.CharField(max_length=200, null=True)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(null=True)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_info', to='app_ofs.category')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'product_info',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=50, null=True, unique=True)),
                ('quantity', models.CharField(max_length=50, null=True)),
                ('ordered_date', models.DateField(null=True)),
                ('delivery_date', models.DateField(null=True)),
                ('price', models.CharField(max_length=50, null=True)),
                ('status', models.CharField(max_length=50, null=True)),
                ('total_price', models.CharField(max_length=50, null=True)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(null=True)),
                ('deleted_on', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_info', to='app_ofs.product', to_field='product_id')),
            ],
            options={
                'db_table': 'order_info',
            },
        ),
        migrations.CreateModel(
            name='InventoryDetailsDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('quantity', models.CharField(max_length=100)),
                ('quantity_added', models.CharField(max_length=50)),
                ('quantity_deducted', models.CharField(max_length=50)),
                ('price', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='inventory_details_dates', to='app_ofs.product', to_field='product_id')),
            ],
            options={
                'db_table': 'inventorydetails_date',
            },
        ),
        migrations.CreateModel(
            name='InventoryDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.CharField(max_length=50)),
                ('price', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='inventorydetails', to='app_ofs.product', to_field='product_id')),
            ],
            options={
                'db_table': 'inventory_details',
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['userid'], name='category_in_userid__283f3d_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['user_id'], name='product_inf_user_id_8c2dd5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_id'], name='product_inf_product_542173_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorydetailsdate',
            index=models.Index(fields=['product'], name='inventoryde_product_b253dc_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorydetailsdate',
            index=models.Index(fields=['user'], name='inventoryde_user_id_622855_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorydetails',
            index=models.Index(fields=['product'], name='inventory_d_product_2525e9_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorydetails',
            index=models.Index(fields=['user'], name='inventory_d_user_id_7f456f_idx'),
        ),
    ]
